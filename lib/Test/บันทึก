// แสดง table
class Tablenutrition extends StatefulWidget {
  const Tablenutrition({super.key});

  @override
  State<Tablenutrition> createState() => _TablenutritionState();
}

class _TablenutritionState extends State<Tablenutrition> {
  CollectionReference nutrition =
      FirebaseFirestore.instance.collection("NutritionScreen");
  @override
  void initState() {
    super.initState();
    initializeFirebase();
  }

  Future<void> initializeFirebase() async {
    await Firebase.initializeApp();
    nutrition = FirebaseFirestore.instance.collection("NutritionScreen");
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        backgroundColor: Colors.brown[300],
        elevation: 0,
        title: Text(
          'จัดการแก้ไข',
          style: TextStyle(color: Colors.white, fontSize: 23),
        ),
        centerTitle: true,
      ),
      body: StreamBuilder<QuerySnapshot>(
          stream: nutrition.snapshots(),
          builder: (context, snapshot) {
            if (snapshot.hasError) {
              return Center(
                child: Text('Error: ${snapshot.error}'),
              );
            }
            if (snapshot.connectionState == ConnectionState.waiting) {
              return const Center(
                child: CircularProgressIndicator(),
              );
            }
            if (snapshot.hasData) {
              final documents = snapshot.data!.docs;
              if (documents.isEmpty) {
                return const Center(
                  child: Column(
                    mainAxisAlignment: MainAxisAlignment.center,
                    children: [Text('ยังไม่มีข้อมูล')],
                  ),
                );
              }
              return ListView.builder(
                itemCount: documents.length,
                itemBuilder: (context, index) {
                  final document = documents[index];
                  final lablenutrition = document['Lablenutrition'] ?? '';

                  return Padding(
                    padding: const EdgeInsets.only(
                      left: 15,
                      right: 12,
                      top: 10,
                    ),
                    child: Card(
                      elevation: 2,
                      child: SizedBox(
                        height: 90,
                        child: Column(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Padding(
                              padding: const EdgeInsets.all(8.0),
                              child: Stack(
                                children: [
                                  ListTile(
                                    isThreeLine: false,
                                    onTap: () {
                                      Navigator.push(
                                        context,
                                        MaterialPageRoute(
                                          builder: (context) => Nutritionclass(
                                              documentReference:
                                                  document.reference),
                                          settings: RouteSettings(
                                              arguments: document),
                                        ),
                                      );
                                    },
                                    subtitle: Column(
                                      children: [
                                        Row(
                                          children: [
                                            Container(
                                                width: MediaQuery.of(context)
                                                        .size
                                                        .width *
                                                    0.6,
                                                child: Text(
                                                  lablenutrition
                                                              .toString()
                                                              .length >
                                                          20
                                                      ? lablenutrition
                                                              .toString()
                                                              .substring(
                                                                  0, 20) +
                                                          '...'
                                                      : lablenutrition,
                                                  style: TextStyle(
                                                      fontSize: 18,
                                                      fontWeight:
                                                          FontWeight.bold),
                                                ))
                                          ],
                                        ),
                                      ],
                                    ),
                                    trailing: SizedBox(
                                      width: 40,
                                      child: Row(
                                        crossAxisAlignment:
                                            CrossAxisAlignment.center,
                                        children: [
                                          InkWell(
                                              //TO DO DELETE
                                              onTap: () async {
                                                final action = await AlertDialogs
                                                    .yesorCancel(context, 'ลบ',
                                                        'คุณต้องการลบข้อมูลนี้หรือไม่');
                                                if (action ==
                                                    DialogsAction.yes) {
                                                  setState(() {
                                                    FirebaseFirestore.instance
                                                        .collection(
                                                            'NutritionScreen')
                                                        .doc(document.id)
                                                        .delete()
                                                        .then((_) {})
                                                        .catchError((error) {});
                                                  });
                                                }
                                              },
                                              child: const Icon(Icons.delete)),
                                        ],
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                            ),
                          ],
                        ),
                      ),
                    ),
                  );
                },
              );
            }
            return Text("ไม่มีข้อมูล");
          }),
    );
  }
}

// แสดง หน้าต่าง
class Nutritionclass extends StatefulWidget {
  final DocumentReference documentReference;

  const Nutritionclass({Key? key, required this.documentReference})
      : super(key: key);

  @override
  State<Nutritionclass> createState() => _NutritionclassState();
}

class _NutritionclassState extends State<Nutritionclass> {
  late Stream<DocumentSnapshot> documentStream;
  DocumentSnapshot? currentDocument;
  @override
  void initState() {
    super.initState();
    documentStream = widget.documentReference.snapshots();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: StreamBuilder<DocumentSnapshot>(
        stream: documentStream,
        builder: (context, snapshot) {
          if (snapshot.connectionState == ConnectionState.waiting) {
            return const Center(
              child: CircularProgressIndicator(),
            );
          }

          if (!snapshot.hasData || snapshot.hasError) {
            return const Center(
              child: Text('Error fetching data'),
            );
          }

          final document = snapshot.data!;
          currentDocument = document;

          final lable = document['Lablenutrition'] ?? '';

          return Scaffold(
            appBar: AppBar(
              backgroundColor: Colors.brown[300],
              elevation: 0,
              title: Text(
                lable,
                style: TextStyle(color: Colors.white, fontSize: 23),
              ),
              centerTitle: true,
            ),
            body: SingleChildScrollView(
              child: Center(
                  child: Column(
                children: [
                  Padding(
                    padding: const EdgeInsets.all(8),
                    child: Text(
                      "หน้า $lable",
                      style:
                          TextStyle(fontSize: 30, fontWeight: FontWeight.bold),
                    ),
                  ),
                ],
              )),
            ),
          );
        },
      ),
    );
  }
}



body: SafeArea(
        child: Stack(
          children: [
            Column(
              children: [
                const SizedBox(height: 10),
                //search bar
                Padding(
                  padding: const EdgeInsets.all(8.0),
                  child: TextField(
                    decoration: InputDecoration(
                        contentPadding: const EdgeInsets.symmetric(
                            vertical: 10.0, horizontal: 10),
                        hintText: "ค้นหา...",
                        suffixIcon: const Icon(Icons.search),
                        border: OutlineInputBorder(
                            borderRadius: BorderRadius.circular(20.0),
                            borderSide: const BorderSide())),
                  ),
                ),
                const SizedBox(height: 15),
                //text
                Padding(
                  padding: const EdgeInsets.only(left: 25.0),
                  child: Container(
                    alignment: FractionalOffset.topLeft,
                    child: Text(
                      'วิดีโอเพื่อสุขภาพ',
                      style: TextStyle(
                          fontWeight: FontWeight.bold,
                          fontSize: 25,
                          color: Colors.brown),
                    ),
                  ),
                ),
                const SizedBox(height: 10),
                const Divider(
                  thickness: 3,
                  color: Color.fromARGB(255, 175, 136, 122),
                  indent: 25,
                  endIndent: 25,
                ),
              ],
            ),
            Padding(
              padding: const EdgeInsets.only(top: 150),
              child: Center(
                child: SingleChildScrollView(
                  child: Column(
                    children: [
                      GestureDetector(
                        onTap: () {
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) => const Openvideoscreen(),
                            ),
                          );
                        },
                        child: SizedBox(
                          width: 400.0,
                          height: 130.0,
                          child: Card(
                            color: Color.fromARGB(255, 143, 113, 102),
                            elevation: 2.0,
                            shape: RoundedRectangleBorder(
                              borderRadius: BorderRadius.circular(8.0),
                            ),
                            child: Center(
                              child: Padding(
                                padding: const EdgeInsets.all(6.0),
                                child: Column(
                                  children: [
                                    Image.asset(
                                      "images/nutrition.png",
                                      width: 65.0,
                                    ),
                                    SizedBox(height: 10.0),
                                    Text(
                                      "แนะนำเกี่ยวกับโภชนาการ",
                                      style: TextStyle(
                                        color: Colors.white,
                                        fontWeight: FontWeight.bold,
                                        fontSize: 20.0,
                                      ),
                                    ),
                                  ],
                                ),
                              ),
                            ),
                          ),
                        ),
                      ),
                    ],
                  ),
                ),
              ),
            )
          ],
        ),
      ),

       // Future sig_up() async {
  //   String url = "http://127.0.0.1/api/register.php";
  //   final respone = await http.post(Uri.parse(url), body: {
  //     'fullname': fullname.text,
  //     'password': password.text,
  //     'email': email.text,
  //     'telno': telno.text,
  //     'birthday': birthday.text,
  //     'bisease': bisease.text,
  //     'sex': sex.text,
  //   });
  //   print(respone.statusCode);
  //   var data = json.decode(respone.body);
  //   if (data == "error") {
  //     Navigator.push(
  //       context,
  //       MaterialPageRoute(
  //         builder: (context) => const Sigup(),
  //       ),
  //     );
  //   } else {
  //     Navigator.of(context).pop();
  //   }
  // }
  // Future testapi() async {
  //   String url = "https://jsonplaceholder.typicode.com/posts";
  //   final respone = await http.get(Uri.parse(url));
  //   print(respone.statusCode);
  // }


  
  // Future<void> sendUserDataToDB(BuildContext context) async {
  //   if (formKey.currentState!.validate()) {
  //     await FirebaseFirestore.instance.collection('UserID').add({
  //       'Fullname': fullname.text,
  //       'Password': password.text,
  //       'Email': email.text,
  //       'Telno': telno.text,
  //       'Birthday': birthday.text,
  //       'Bisease': bisease.text,
  //       'Sex': sex.text,
  //     });
  //     // บันทึกสำเร็จ ไปยังหน้า HomeScreen
  //     Navigator.pop(context);
  //   } else {
  //     // แจ้งเตือนว่าข้อมูลไม่ครบ
  //     ScaffoldMessenger.of(context).showSnackBar(
  //       SnackBar(
  //         content: Text('กรุณากรอกข้อมูลให้ครบ'),
  //         duration: Duration(seconds: 2), // แสดงเป็นเวลา 2 วินาที
  //       ),
  //     );
  //   }
  // }
